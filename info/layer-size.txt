SIZE      CREATED BY
0B        CMD ["$DEFAULT_SHELL"]
0B        ENV DEFAULT_SHELL=/usr/bin/fish
0B        SHELL [/bin/bash -c]
6.81kB    RUN |11 /bin/bash -c pipx list --short | tee -a sbom.txt # buildkit
16.3MB    RUN |11 /bin/bash -c pipx install vexy # buildkit
193MB     RUN |11 /bin/bash -c pipx install checkov # buildkit
129MB     RUN |11 /bin/bash -c pipx install sdccli # buildkit
6.37kB    RUN |11 /bin/bash -c pip install --user --no-cache kubernetes PrettyTable urllib3 &&     python3 /usr/local/bin/kubiscan/KubiScan.py --version | tee -a sbom.txt # buildkit
578MB     RUN |11 /bin/bash -c SOFTWARE="kube-hunter detect-secrets yubikey-manager thefuck docker-squash         ansible paramiko illuminatio vault-cli cve-bin-tool c7n         robusta in-toto anchorecli swid-generator" &&     pip install --user --no-cache $SOFTWARE &&     pip list | grep -F "$(echo "$SOFTWARE" | tr -s ' ' | tr " " '\n')" - | tr -s ' '         | tee -a sbom.txt # buildkit
2.05MB    RUN |11 /bin/bash -c python3 -m pip install --user --no-cache pipx &&     echo "pipx" $(pipx --version) | tee -a sbom.txt # buildkit
89.8MB    RUN |11 /bin/bash -c curl -fsSL https://install.python-poetry.org | python3 - &&     version poetry | tee -a sbom.txt # buildkit
4.29MB    RUN |11 /bin/bash -c curl -fsSL https://pyenv.run | bash &&     version pyenv | tee -a sbom.txt # buildkit
105MB     RUN |11 /bin/bash -c npm install snyk npx yarn @bitwarden/cli &&     version snyk npx yarn bw | tee -a sbom.txt &&     npm cache clean -force # buildkit
1.83MB    RUN |11 /bin/bash -c curl -fsSLo- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash &&     version nvm | tee -a sbom.txt # buildkit
61.6MB    RUN |11 /bin/bash -c go install github.com/jrhouston/tfk8s@latest  &&     version tfk8s | tee -a sbom.txt # buildkit
44.4MB    RUN |11 /bin/bash -c go install -mod=mod github.com/onsi/ginkgo/v2/ginkgo &&     version ginkgo | tee -a sbom.txt # buildkit
62.9MB    RUN |11 /bin/bash -c helm plugin install https://github.com/databus23/helm-diff &&     echo "helm plugins:" | tee -a sbom.txt &&     helm plugin list | tee -a sbom.txt # buildkit
282MB     RUN |11 /bin/bash -c kubectl krew install     kubesec-scan lineage example neat score popeye ktop nsenter doctor who-can &&     echo "kubectl krew plugins:" | tee -a sbom.txt &&     script -qc 'kubectl krew list' | tr -s ' ' | tee -a sbom.txt # buildkit
122kB     RUN |11 /bin/bash -c kubectl krew index add kvaps https://github.com/kvaps/krew-index &&     kubectl krew install kvaps/node-shell # buildkit
0B        ENV PATH=/home/vicen/.krew/bin:/home/vicen/node_modules/.bin:/home/vicen/.pyenv/bin:/home/vicen/.go/bin:/home/vicen/.gem/bin:/home/vicen/.local/bin:/usr/local/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
30.8MB    RUN |11 /bin/bash -c (     set -x; cd "$(mktemp -d)" &&     OS="$(uname | tr '[:upper:]' '[:lower:]')" &&     ARCH="$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/')" &&     KREW="krew-${OS}_${ARCH}" &&     curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/latest/download/${KREW}.tar.gz" &&     tar zxvf "${KREW}.tar.gz" &&     ./"${KREW}" install krew     ) # buildkit
76.6MB    RUN |11 /bin/bash -c curl -sSfLo install.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh         | sh -s -- -b -p $HOME/miniconda &&     version conda | tee -a sbom.txt # buildkit
3.63kB    RUN |11 /bin/bash -c echo '# Created in Dockerfile' >>/home/${user}/.bashrc &&     echo 'source <(kubectl completion bash)' >>/home/${user}/.bashrc &&     echo 'alias k=kubectl' >>/home/${user}/.bashrc &&     echo 'complete -F __start_kubectl k' >>/home/${user}/.bashrc # buildkit
9.59kB    RUN |11 /bin/bash -c git clone https://github.com/jethrokuan/z.git &&     mv ./z/conf.d/z.fish ./.config/fish/conf.d/z.fish &&     mv ./z/functions/* ./.config/fish/functions &&     rm -rf ./z # buildkit
2.46kB    COPY .vimrc ./.vimrc # buildkit
2.69kB    COPY config/starship.toml ./.config/starship.toml # buildkit
1.34kB    COPY config/fish/config-alias.fish ./.config/fish/config-alias.fish # buildkit
2.37kB    COPY config/fish/config.fish ./.config/fish/config.fish # buildkit
0B        ENV PATH=/home/vicen/node_modules/.bin:/home/vicen/.pyenv/bin:/home/vicen/.go/bin:/home/vicen/.gem/bin:/home/vicen/.local/bin:/usr/local/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
0B        ENV PATH=/home/vicen/.pyenv/bin:/home/vicen/.go/bin:/home/vicen/.gem/bin:/home/vicen/.local/bin:/usr/local/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
0B        ENV PATH=/home/vicen/.go/bin:/home/vicen/.gem/bin:/home/vicen/.local/bin:/usr/local/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
0B        ENV GOPATH=/home/vicen/.go/
0B        ENV PATH=/home/vicen/.gem/bin:/home/vicen/.local/bin:/usr/local/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
0B        ENV GEM_HOME=/home/vicen/.gem
0B        ENV GEM_PATH=/home/vicen/.gem/bin
0B        ENV PATH=/home/vicen/.local/bin:/usr/local/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
0B        ENV PATH=/usr/local/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
0B        SHELL [/bin/bash -c]
0B        WORKDIR /home/vicen
0B        USER 1000:1000
3.19MB    RUN |11 /bin/sh -c echo 'debconf debconf/frontend select Dialog' | sudo debconf-set-selections # buildkit
4.6kB     RUN |11 /bin/sh -c sudo usermod -aG docker ${user} && sudo -H -u ${user} newgrp docker # buildkit
4.58kB    RUN |11 /bin/sh -c sudo usermod -aG rvm ${user} # buildkit
809B      RUN |11 /bin/sh -c echo "${user}:${pass}" | chpasswd # buildkit
5.43kB    RUN |11 /bin/sh -c mv /install/sbom.txt /home/${user}/sbom.txt &&     chown ${user}:${group} /home/${user}/sbom.txt # buildkit
4.55kB    RUN |11 /bin/sh -c mkdir -p         /home/${user}/.config/fish/completions         /home/${user}/.config/fish/conf.d         /home/${user}/.config/fish/functions         /home/${user}/.gem/bin         /home/${user}/.local/bin         /home/${user}/.go/bin         /home/${user}/.keys &&     chown -R ${user}:${group} /home/${user} # buildkit
335kB     RUN |11 /bin/sh -c useradd -u ${uid} -g ${group} -s ${shell} -m ${user} &&     usermod -aG sudo ${user} # buildkit
0B        ARG shell=/usr/bin/fish
0B        ARG pass=changeme
0B        ARG uid=1000
0B        ARG user=vicente
17.5MB    RUN |7 /bin/sh -c curl -fsSL https://gitlab.com/gitlab-org/cli/-/raw/main/scripts/install.sh | sudo sh # buildkit
38.5MB    RUN |7 /bin/sh -c curl -fsSL https://raw.githubusercontent.com/crossplane/crossplane/master/install.sh | sh &&     sudo mv kubectl-crossplane /usr/local/bin/ &&     version kubectl-crossplane | tee -a sbom.txt # buildkit
13.4MB    RUN |7 /bin/sh -c curl -fsSL https://raw.githubusercontent.com/nektos/act/master/install.sh         | sudo sh -s -- -b /usr/local/bin &&     version act | tee -a sbom.txt # buildkit
59.8MB    RUN |7 /bin/sh -c curl -fsSL https://raw.githubusercontent.com/armosec/kubescape/master/install.sh         | sudo /bin/bash &&     version kubescape | tee -a sbom.txt # buildkit
11.8MB    RUN |7 /bin/sh -c curl -fsSL https://starship.rs/install.sh         | sudo sh -s -- --yes &&     version starship | tee -a sbom.txt # buildkit
212MB     RUN |7 /bin/sh -c curl -fsSL https://carvel.dev/install.sh | sudo bash - &&     version kapp ytt kapp kbld imgpkg vendir | tee -a sbom.txt # buildkit
385MB     RUN |7 /bin/sh -c curl -fsSL https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh         | sudo bash -s --  --accept-all-defaults &&     version /root/lib/oracle-cli/bin/oci | tee -a sbom.txt # buildkit
64.2MB    RUN |7 /bin/sh -c curl -fsSL https://get.okteto.com         | sudo sh &&     okteto version | tee -a sbom.txt # buildkit
26.4MB    RUN |7 /bin/sh -c curl -fsSL https://raw.githubusercontent.com/docker-slim/docker-slim/master/scripts/install-dockerslim.sh         | sudo -E bash - &&     version docker-slim | tee -a sbom.txt # buildkit
46.4MB    RUN |7 /bin/sh -c curl -fsSL https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3         | sudo -E bash - &&     version helm | tee -a sbom.txt # buildkit
60.1MB    RUN |7 /bin/sh -c curl -fsSL https://raw.githubusercontent.com/anchore/syft/main/install.sh         | sudo sh -s -- -b /usr/local/bin &&     version syft | tee -a sbom.txt # buildkit
63.9MB    RUN |7 /bin/sh -c curl -fsSL https://raw.githubusercontent.com/anchore/grype/main/install.sh         | sudo sh -s -- -b /usr/local/bin &&     version grype | tee -a sbom.txt # buildkit
159MB     RUN |7 /bin/sh -c curl -fsSL -o aws.zip "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" &&     unzip ./aws.zip && ./aws/install &&     rm -r ./aws aws.zip &&     version aws | tee -a sbom.txt # buildkit
68.2MB    RUN |7 /bin/sh -c curl -fsSLO https://mirror.openshift.com/pub/rhacs/assets/latest/bin/Linux/roxctl &&     chmod +x roxctl &&     sudo mv roxctl /usr/local/bin/ &&     version roxctl | tee -a sbom.txt # buildkit
53.1MB    RUN |7 /bin/sh -c VERSION=$(curl -fsSL https://dl.k8s.io/release/stable.txt) &&     curl -fsSLO "https://dl.k8s.io/release/$VERSION/bin/linux/amd64/kubectl-convert" &&     sudo install -o root -g root -m 0755 kubectl-convert /usr/local/bin/kubectl-convert &&     rm kubectl-convert &&     version kubectl-convert | tee -a sbom.txt # buildkit
123MB     RUN |7 /bin/sh -c curl -fsSLO https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz &&     tar -xvf oc.tar.gz &&     chmod +x oc && sudo mv oc /usr/local/bin/ &&     rm README.md kubectl oc.tar.gz &&     version oc | tee -a sbom.txt # buildkit
6.88MB    RUN |7 /bin/sh -c curl -fsSLo ./kind https://kind.sigs.k8s.io/dl/latest/kind-linux-amd64 &&     chmod +x ./kind && sudo mv ./kind /usr/local/bin/ &&     version kind | tee -a sbom.txt # buildkit
75.6MB    RUN |7 /bin/sh -c curl -fsSLo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64   && chmod +x minikube && sudo mv minikube /usr/local/bin/ &&     version minikube | tee -a sbom.txt # buildkit
37MB      RUN |7 /bin/sh -c apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3EFE0E0A2F2F60AA &&     echo "deb http://ppa.launchpad.net/tektoncd/cli/ubuntu eoan main"         | sudo tee /etc/apt/sources.list.d/tektoncd-ubuntu-cli.list > /dev/null &&     sudo apt-get update -o Dir::Etc::sourcelist=/etc/apt/sources.list.d/tektoncd-ubuntu-cli.list &&     sudo apt-get install -y tektoncd-cli &&     version tkn | tee -a sbom.txt # buildkit
874MB     RUN |7 /bin/sh -c curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg         | tee /usr/share/keyrings/cloud.google.gpg > /dev/null &&     sudo chmod a+r /usr/share/keyrings/cloud.google.gpg &&     echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main"         | tee /etc/apt/sources.list.d/google-cloud-sdk.list > /dev/null &&     apt-get update -o Dir::Etc::sourcelist=/etc/apt/sources.list.d/google-cloud-sdk.list &&     apt-get install -y google-cloud-sdk &&     version gcloud | tee -a sbom.txt # buildkit
39.4MB    RUN |7 /bin/sh -c curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg         | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg &&     sudo chmod a+r /usr/share/keyrings/githubcli-archive-keyring.gpg &&     echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main"         | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null &&     sudo apt-get update -o Dir::Etc::sourcelist=/etc/apt/sources.list.d/github-cli.list &&     sudo apt-get install -y gh &&     version gh | tee -a sbom.txt # buildkit
335MB     RUN |7 /bin/sh -c curl -fsSL https://apt.releases.hashicorp.com/gpg         | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null &&     sudo chmod a+r /usr/share/keyrings/hashicorp-archive-keyring.gpg &&     echo "deb [arch=amd64 signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main"         | sudo tee /etc/apt/sources.list.d/hashicorp.list > /dev/null &&     sudo apt-get update -o Dir::Etc::sourcelist=/etc/apt/sources.list.d/hashicorp.list &&     sudo apt-get install -y vagrant terraform &&     version vagrant | tee -a sbom.txt # buildkit
183MB     RUN |7 /bin/sh -c curl -fsSL https://aquasecurity.github.io/trivy-repo/deb/public.key         | gpg --dearmor | sudo tee /usr/share/keyrings/trivy-archive-keyring.gpg > /dev/null &&     sudo chmod a+r /usr/share/keyrings/trivy-archive-keyring.gpg &&     echo "deb [signed-by=/usr/share/keyrings/trivy-archive-keyring.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main"         | sudo tee -a /etc/apt/sources.list.d/trivy.list > /dev/null &&     sudo apt-get update -o Dir::Etc::sourcelist=/etc/apt/sources.list.d/trivy.list &&     sudo apt-get install -y trivy &&     version trivy | tee -a sbom.txt # buildkit
1.08GB    RUN |7 /bin/sh -c curl -fsSL https://packages.microsoft.com/keys/microsoft.asc         | gpg --dearmor | sudo tee /usr/share/keyrings/microsoft-archive-keyring.gpg > /dev/null &&     sudo chmod a+r /usr/share/keyrings/microsoft-archive-keyring.gpg &&     echo "deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft-archive-keyring.gpg] https://packages.microsoft.com/repos/azure-cli/ $(lsb_release -cs) main"         | sudo tee /etc/apt/sources.list.d/azure-cli.list > /dev/null &&     sudo apt-get update -o Dir::Etc::sourcelist=/etc/apt/sources.list.d/azure-cli.list &&     sudo apt-get install -y azure-cli &&     version az | tee -a sbom.txt # buildkit
426MB     RUN |7 /bin/sh -c curl -fsSL https://download.docker.com/linux/debian/gpg         | gpg --dearmor | sudo tee /usr/share/keyrings/docker-archive-keyring.gpg > /dev/null &&     sudo chmod a+r /usr/share/keyrings/docker-archive-keyring.gpg &&     echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable"         | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null &&     sudo apt-get update -o Dir::Etc::sourcelist=/etc/apt/sources.list.d/docker.list &&     sudo apt-get install -y docker-ce docker-ce-cli containerd.io  &&     version docker | tee -a sbom.txt # buildkit
48.7MB    RUN |7 /bin/sh -c curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg         | tee /usr/share/keyrings/kubernetes-archive-keyring.gpg > /dev/null &&     sudo chmod a+r /usr/share/keyrings/kubernetes-archive-keyring.gpg &&     echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main"         | sudo tee /etc/apt/sources.list.d/kubernetes.list > /dev/null &&     sudo apt-get update -o Dir::Etc::sourcelist=/etc/apt/sources.list.d/kubernetes.list &&     sudo apt-get install -y kubectl &&     echo "kubectl" $(kubectl version --short --client 2>/dev/null) | tee -a sbom.txt # buildkit
32.2MB    RUN |7 /bin/sh -c curl -fsSL https://download.opensuse.org/repositories/shells:fish:release:3/Debian_11/Release.key         | gpg --dearmor | sudo tee /usr/share/keyrings/shells_fish_release_3.gpg > /dev/null &&     sudo chmod a+r /usr/share/keyrings/shells_fish_release_3.gpg &&     echo 'deb [signed-by=/usr/share/keyrings/shells_fish_release_3.gpg] http://download.opensuse.org/repositories/shells:/fish:/release:/3/Debian_11/ /'         | sudo tee /etc/apt/sources.list.d/shells:fish:release:3.list > /dev/null &&     sudo apt-get update &&     sudo apt-get install -y fish &&     version fish | tee -a sbom.txt # buildkit
10.8MB    RUN |7 /bin/sh -c curl -fsSL https://github.com/cilium/tetragon/releases/download/tetragon-cli/tetragon-linux-amd64.tar.gz         | tar xz && sudo mv tetragon /usr/bin/tetragon &&    echo "tetragon (initial release)" | tee -a sbom.txt # buildkit
35.8MB    RUN |7 /bin/sh -c REPO="stackrox/kube-linter" ZFILE="kube-linter-linux.tar.gz" FILE="kube-linter" gh_install # buildkit
19.6MB    RUN |7 /bin/sh -c REPO="cloudflare/pint" ZFILE="pint-VERSION-linux-x86_64.tar.gz" FILE="pint-linux-amd64" XFILE="pint" gh_install # buildkit
25.1MB    RUN |7 /bin/sh -c REPO="prometheus/alertmanager" ZFILE="alertmanager-VERSION.linux-amd64.tar.gz" FILE="alertmanager-VERSION.linux-amd64/amtool" XFILE="amtool" gh_install # buildkit
102MB     RUN |7 /bin/sh -c REPO="prometheus/prometheus" ZFILE="prometheus-VERSION.linux-amd64.tar.gz" FILE="prometheus-VERSION.linux-amd64/promtool" XFILE="promtool" gh_install # buildkit
27.9MB    RUN |7 /bin/sh -c REPO="ahmetb/kubectx" ZFILE="kubens_vVERSION_linux_x86_64.tar.gz" FILE="kubens" gh_install # buildkit
2.41MB    RUN |7 /bin/sh -c REPO="ahmetb/kubectx" ZFILE="kubectx_vVERSION_linux_x86_64.tar.gz" FILE="kubectx" gh_install # buildkit
2.69MB    RUN |7 /bin/sh -c REPO="PaulJuliusMartinez/jless" ZFILE="jless-vVERSION-x86_64-unknown-linux-gnu.zip" FILE="jless" gh_install # buildkit
21.1MB    RUN |7 /bin/sh -c REPO="drwetter/testssl.sh" FILE="testssl.sh-VERSION" XFILE="testssl" gh_install # buildkit
180kB     RUN |7 /bin/sh -c REPO="cyberark/KubiScan" FILE="KubiScan-VERSION" XFILE="kubiscan" gh_install # buildkit
398kB     RUN |7 /bin/sh -c REPO="docker/docker-bench-security" FILE="docker-bench-security-VERSION" XFILE="docker-bench-security" gh_install # buildkit
16.7MB    RUN |7 /bin/sh -c REPO="datreeio/datree" gh_install # buildkit
30.5MB    RUN |7 /bin/sh -c REPO="Shopify/kubeaudit" gh_install # buildkit
18.8MB    RUN |7 /bin/sh -c REPO="zegl/kube-score" gh_install # buildkit
2.29MB    RUN |7 /bin/sh -c REPO="wils0ns/tfscan" gh_install # buildkit
14.2MB    RUN |7 /bin/sh -c REPO="projectdiscovery/httpx" gh_install # buildkit
39.7MB    RUN |7 /bin/sh -c REPO="fairwindsops/polaris" gh_install # buildkit
36.6MB    RUN |7 /bin/sh -c REPO="open-policy-agent/conftest" gh_install # buildkit
13.5MB    RUN |7 /bin/sh -c REPO="stelligent/config-lint" gh_install # buildkit
10.8MB    RUN |7 /bin/sh -c REPO="controlplaneio/badrobot" gh_install # buildkit
5.32MB    RUN |7 /bin/sh -c REPO="tj/mmake" gh_install # buildkit
7.42MB    RUN |7 /bin/sh -c REPO="instrumenta/kubeval" gh_install # buildkit
37.5MB    RUN |7 /bin/sh -c REPO="turbot/steampipe" gh_install # buildkit
37.7MB    RUN |7 /bin/sh -c REPO="cloudquery/cloudquery" gh_install # buildkit
70.9MB    RUN |7 /bin/sh -c REPO="tenable/terrascan"  gh_install # buildkit
39.2MB    RUN |7 /bin/sh -c REPO="liggitt/audit2rbac" gh_install # buildkit
10.8MB    RUN |7 /bin/sh -c REPO="controlplaneio/kubesec" gh_install # buildkit
118MB     RUN |7 /bin/sh -c REPO="weaveworks/eksctl" gh_install # buildkit
16.2MB    RUN |7 /bin/sh -c REPO="aquasecurity/chain-bench" gh_install # buildkit
11.2MB    RUN |7 /bin/sh -c REPO="wagoodman/dive" gh_install # buildkit
45.7MB    RUN |7 /bin/sh -c REPO="kubewarden/kwctl" ZFILE="kwctl-linux-x86_64.zip" FILE="kwctl-linux-x86_64" XFILE="kwctl" gh_install # buildkit
2.3MB     RUN |7 /bin/sh -c REPO="hadolint/hadolint" ZFILE="hadolint-Linux-x86_64" XFILE="hadolint" gh_install # buildkit
87.1MB    RUN |7 /bin/sh -c REPO="sigstore/cosign" ZFILE="cosign-linux-amd64" XFILE="cosign" gh_install # buildkit
157MB     RUN |7 /bin/sh -c REPO="kubernetes/kops" ZFILE="kops-linux-amd64" XFILE="kops" gh_install # buildkit
46.6MB    RUN |7 /bin/sh -c REPO="roboll/helmfile" ZFILE="helmfile_linux_amd64" XFILE="helmfile" gh_install # buildkit
21.7MB    RUN |7 /bin/sh -c REPO="wercker/stern" ZFILE="stern_linux_amd64" XFILE="stern" gh_install # buildkit
66.2MB    RUN |7 /bin/sh -c REPO="GoogleContainerTools/skaffold" ZFILE="skaffold-linux-amd64" XFILE="skaffold" gh_install # buildkit
12.2MB    RUN |7 /bin/sh -c REPO="mikefarah/yq" ZFILE="yq_linux_amd64" FILE="yq_linux_amd64" XFILE="yq" gh_install # buildkit
17.2MB    RUN |7 /bin/sh -c REPO="cloud66-oss/copper" ZFILE="linux_amd64_2.0.1" FILE="linux_amd64_2.0.1" XFILE="copper" gh_install # buildkit
9.35MB    RUN |7 /bin/sh -c REPO="DopplerHQ/cli" ZFILE="doppler_VERSION_linux_amd64.tar.gz" FILE="doppler" gh_install # buildkit
61.8MB    RUN |7 /bin/sh -c REPO="open-policy-agent/gatekeeper" ZFILE="gator-vVERSION-linux-amd64.tar.gz" FILE="gator" gh_install # buildkit
46.2MB    RUN |7 /bin/sh -c REPO="kubearmor/kubearmor-client" ZFILE="karmor_VERSION_linux_amd64.tar.gz" FILE="karmor" gh_install # buildkit
73.3MB    RUN |7 /bin/sh -c REPO="artifacthub/hub" ZFILE="ah_VERSION_linux_amd64.tar.gz" FILE="ah" gh_install # buildkit
46.5MB    RUN |7 /bin/sh -c REPO="cert-manager/cert-manager" ZFILE="cmctl-linux-amd64.tar.gz" FILE="cmctl" gh_install # buildkit
50.3MB    RUN |7 /bin/sh -c REPO="kubernetes-sigs/cri-tools" ZFILE="crictl-vVERSION-linux-amd64.tar.gz" FILE="crictl" gh_install # buildkit
24.2MB    RUN |7 /bin/sh -c REPO="golangci/golangci-lint" ZFILE="golangci-lint-VERSION-linux-amd64.tar.gz" FILE="golangci-lint-VERSION-linux-amd64/golangci-lint" XFILE="golangci-lint" gh_install # buildkit
36.3MB    RUN |7 /bin/sh -c REPO="grafana/k6" ZFILE="k6-vVERSION-linux-amd64.tar.gz" FILE="k6-vVERSION-linux-amd64/k6" XFILE="k6" gh_install # buildkit
26.9MB    RUN |7 /bin/sh -c REPO="minishift/minishift" ZFILE="minishift-VERSION-linux-amd64.tgz" FILE="minishift-VERSION-linux-amd64/minishift" XFILE="minishift" gh_install # buildkit
5.89MB    RUN |7 /bin/sh -c REPO="golang/mock" ZFILE="mock_VERSION_linux_amd64.tar.gz" FILE="mock_VERSION_linux_amd64/mockgen" XFILE="mockgen" gh_install # buildkit
0B        ARG GHTOKEN=
4.53kB    COPY ./scripts/gh_install.sh /usr/local/bin/gh_install # buildkit
12.2MB    RUN |6 /bin/sh -c curl -fsSL -o op.zip https://cache.agilebits.com/dist/1P/op2/pkg/v${one_password_ver}/op_linux_amd64_v${one_password_ver}.zip &&     unzip op.zip && sudo mv op /usr/local/bin/ && rm op.zip op.sig     version op | tee -a sbom.txt # buildkit
0B        ARG one_password_ver=2.5.1
40.2MB    RUN |5 /bin/sh -c curl -fsSLo clamav.deb https://www.clamav.net/downloads/production/clamav-${clamav_ver}.linux.x86_64.deb &&     sudo dpkg -i clamav.deb &&     rm clamav.deb &&     version clamav-config | tee -a sbom.txt # buildkit
0B        ARG clamav_ver=0.105.0
0B        ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
431MB     RUN |4 /bin/sh -c go_latest_ver=$(curl -fsSL https://go.dev/VERSION?m=text  | cut -c 3-) &&     curl -fsSLo go.tar.gz https://go.dev/dl/go${go_ver}.linux-amd64.tar.gz &&     rm -rf /usr/local/go && sudo tar -C /usr/local -xzf go.tar.gz &&     rm go.tar.gz &&     /usr/local/go/bin/go version | tee -a sbom.txt # buildkit
0B        ARG go_ver=1.18
0B        ENV DOTNET_CLI_TELEMETRY_OPTOUT=1
509MB     RUN |3 /bin/sh -c curl -fsSLo packages-microsoft-prod.deb https://packages.microsoft.com/config/debian/11/packages-microsoft-prod.deb &&     sudo dpkg -i packages-microsoft-prod.deb &&     rm packages-microsoft-prod.deb &&     sudo apt-get update &&     sudo apt-get install -y dotnet-sdk-${dotnet_ver} &&     version dotnet | tee -a sbom.txt # buildkit
0B        ARG dotnet_ver=6.0
192MB     RUN |2 /bin/sh -c gem install jekyll bundler &&     version jekyll bundler | tee -a sbom.txt # buildkit
686MB     RUN |2 /bin/sh -c PATH="$HOME/.gem/bin:$PATH" &&     command curl -fsSL https://rvm.io/mpapis.asc | gpg2 --import - &&     command curl -fsSL https://rvm.io/pkuczynski.asc | gpg2 --import - &&     curl -fsSL https://get.rvm.io | bash -s stable --ruby &&     version ruby | tee -a sbom.txt # buildkit
2.25kB    RUN |2 /bin/sh -c groupadd -g ${gid} ${group} # buildkit
0B        ARG gid=1000
0B        ARG group=developer
1.04GB    RUN /bin/sh -c apt-get -y install         git vim build-essential direnv bat         nmap ncat netcat dnsutils iputils-ping net-tools         conntrack         python3-dev python3-pip python3-setuptools python3-venv         npm         ruby-full zlib1g-dev         podman buildah skopeo yamllint shellcheck         tor         apache2-utils &&     echo "npm" $(npm --version) | tee -a sbom.txt &&     version python3 pip ruby podman buildah skopeo yamllint shellcheck tor             ab | tee -a sbom.txt # buildkit
207MB     RUN /bin/sh -c apt-get install -y software-properties-common         apt-transport-https ca-certificates lsb-release         gnupg gnupg2 curl wget unzip sudo         zsh nano jq procps         swig libpcsclite-dev # buildkit
2.01MB    RUN /bin/sh -c apt-get install -y apt-utils # buildkit
17.9MB    RUN /bin/sh -c apt-get update # buildkit
1.57MB    RUN /bin/sh -c echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections # buildkit
406B      COPY ./scripts/version.sh /usr/local/bin/version # buildkit
0B        WORKDIR /install
0B        /bin/sh -c #(nop)  CMD ["bash"]
124MB     /bin/sh -c #(nop) ADD file:6944d322f4c04bd2192061822af5cbec8ac0a6b424c461d66174d32aed604972 in / 
